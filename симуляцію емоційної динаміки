import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

st.set_page_config(page_title="–°–∏–º—É–ª—è—Ü—ñ—è –µ–º–æ—Ü—ñ–π–Ω–æ—ó —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ", layout="centered")

st.title("üß† –°–∏–º—É–ª—è—Ü—ñ—è –≤–ø–ª–∏–≤—É –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –≤ —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ")
st.markdown("""
–ú–æ–¥–µ–ª—å –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î, —è–∫ –∑–º—ñ–Ω—é—î—Ç—å—Å—è —Ä—ñ–≤–µ–Ω—å **—Å—Ç—Ä–µ—Å—É**, **–∞–≥—Ä–µ—Å—ñ—ó** —Ç–∞ **–∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤** —É –≥—Ä—É–ø—ñ –∑ 100 –ª—é–¥–µ–π.
""")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
n_people = st.slider("–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤", 50, 200, 100)
n_days = st.slider("–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Å–∏–º—É–ª—è—Ü—ñ—ó (–¥–Ω—ñ–≤)", 30, 120, 60)
support_start_day = st.slider("–î–µ–Ω—å –ø–æ—á–∞—Ç–∫—É –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ–≥–æ –≤—Ç—Ä—É—á–∞–Ω–Ω—è", 0, n_days-1, 30)
support_effectiveness = st.slider("–ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –≤—Ç—Ä—É—á–∞–Ω–Ω—è", 0.0, 1.0, 0.3, 0.05)
conflict_threshold = st.slider("–ü–æ—Ä—ñ–≥ –¥–ª—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç–Ω–æ—ó –ø–æ–≤–µ–¥—ñ–Ω–∫–∏", 0.1, 1.0, 0.7, 0.05)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
np.random.seed(42)
stress = np.random.rand(n_people) * 0.4
aggression = np.random.rand(n_people) * 0.2

stress_history = []
aggression_history = []
conflict_history = []

# –°–∏–º—É–ª—è—Ü—ñ—è
for day in range(n_days):
    stress += np.random.normal(0.01, 0.02, n_people)
    aggression += stress * 0.05 + np.random.normal(0, 0.01, n_people)

    if day >= support_start_day:
        stress -= support_effectiveness * stress
        aggression -= support_effectiveness * aggression

    stress = np.clip(stress, 0, 1)
    aggression = np.clip(aggression, 0, 1)

    interactions = np.random.choice(n_people, (n_people, 2))
    conflicts = 0
    for i, j in interactions:
        if i != j:
            conflict_probability = (aggression[i] + aggression[j]) / 2
            if conflict_probability > conflict_threshold:
                conflicts += 1

    stress_history.append(np.mean(stress))
    aggression_history.append(np.mean(aggression))
    conflict_history.append(conflicts)

# –ì—Ä–∞—Ñ—ñ–∫
fig, ax = plt.subplots(figsize=(10, 5))
ax.plot(stress_history, label="–°–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç—Ä–µ—Å")
ax.plot(aggression_history, label="–°–µ—Ä–µ–¥–Ω—è –∞–≥—Ä–µ—Å—ñ—è")
ax.plot(conflict_history, label="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤")
ax.axvline(support_start_day, color='green', linestyle='--', label='–í—Ç—Ä—É—á–∞–Ω–Ω—è')
ax.set_title("–î–∏–Ω–∞–º—ñ–∫–∞ –µ–º–æ—Ü—ñ–π–Ω–æ—ó —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ")
ax.set_xlabel("–î–µ–Ω—å")
ax.set_ylabel("–†—ñ–≤–µ–Ω—å / –ö—ñ–ª—å–∫—ñ—Å—Ç—å")
ax.legend()
ax.grid(True)
st.pyplot(fig)

# –Ü–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—è
st.markdown("### üîç –Ü–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
st.write(f"- –ü—ñ—Å–ª—è {support_start_day} –¥–Ω—è –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–µ –≤—Ç—Ä—É—á–∞–Ω–Ω—è –ø–æ—Å—Ç—É–ø–æ–≤–æ –∑–Ω–∏–∂—É—î —Ä—ñ–≤–Ω—ñ **—Å—Ç—Ä–µ—Å—É** —Ç–∞ **–∞–≥—Ä–µ—Å—ñ—ó**.")
st.write("- –ö–æ–Ω—Ñ–ª—ñ–∫—Ç–∏ –∑–º–µ–Ω—à—É—é—Ç—å—Å—è, —è–∫—â–æ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –≤—Ç—Ä—É—á–∞–Ω–Ω—è —î –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≤–∏—Å–æ–∫–æ—é.")
